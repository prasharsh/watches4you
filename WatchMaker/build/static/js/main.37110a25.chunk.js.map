{"version":3,"sources":["Raj/images/logo.png","serviceWorker.js","Raj/components/navbarHeader.jsx","Raj/components/createevent.jsx","Raj/components/sortAndSearch.jsx","Raj/components/posteventhist.jsx","Raj/components/loader.jsx","Raj/firebase.js","Raj/components/createeventContainer.jsx","Raj/components/findeventContainer.jsx","Raj/components/errorpage.jsx","Raj/components/navbarTemplate.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","NavbarHeader","props","state","Navbar","className","expand","sticky","Brand","href","style","fontFamily","fontSize","Toggle","aria-controls","Collapse","id","Nav","variant","exact","activeClassName","to","color","Component","CreateEvent","renderDescription","isCreate","Form","Row","Group","as","Col","controlId","Label","about","length","Control","placeholder","name","maxLength","value","onChange","onDescriptionEnter","renderUploadImg","type","multiple","handleImgFiles","accept","renderClearImgBtn","imagePreviewUrl1","imageError","renderImgPreview","img","src","width","height","border","onClick","onClearImgBtnClick","buttonText","this","isUpdate","hedingText","backgroundColor","borderRadius","borderLeft","boxShadow","noValidate","validated","isValidated","onSubmit","mySubmitHandler","watchname","onFromToEnter","required","Feedback","quantity","onNumInputChange","InputGroup","Prepend","Text","aria-describedby","price","paddingBottom","Button","SortAndSearch","header","searchBy","onSearchByChange","searchTerm","onSearchTermChange","sortyBy","onSortByChange","PostEventHistory","imageurl","eventHistory","img_url","Card","Img","alt","Body","Title","watch_name","watch_quantity","watch_price","onPostedEvetClicked","onDeleteEvetClicked","Loader","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","CreateEventContainer","event","a","preventDefault","currentTarget","checkValidity","setState","stopPropagation","isMasked","uploadImages","then","imageurls","console","log","updateItemId","updatedItem","url","isWatchmaker","axios","put","res","data","map","item","watch_id","eventHistoryToDisplay","files","document","getElementById","catch","err","newItem","post","target","onEventddChange","eventTypeVal","history","delete","filteredevents","filter","renderPostEventHistory","key","filteredEventHistory","toString","toLowerCase","indexOf","sort","b","urls","counter","Promise","resolve","reject","forEach","file","index","ref","on","snapshot","error","child","getDownloadURL","push","e","reader1","FileReader","file1","onloadend","result","readAsDataURL","renderMask","paddingTop","loader","eventId","get","Container","sorthBy","CardColumns","FindEventContainer","transcations","columns","title","field","ErrorPage","NavbarTemplate","overflow","path","component","createeventContainer","Error","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.37110a25.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b6440551.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","//@Author - RajKumar B00849566\r\n/* @Author - Jigar Makwana B00842568 */\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Nav, Button, Row, Col, Navbar } from \"react-bootstrap\";\r\nimport { Redirect, NavLink } from \"react-router-dom\";\r\nimport logo from \"../images/logo.png\";\r\nimport { MdNotificationsActive } from \"react-icons/md\";\r\nimport { BsWatch } from \"react-icons/bs\";\r\n\r\nimport Cookies from \"js-cookie\";\r\nimport axios from \"axios\";\r\n\r\nclass NavbarHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      \r\n    };\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <section>\r\n        <Navbar className=\"navbg\" expand=\"lg\" sticky=\"top\">\r\n          <section>\r\n            <Navbar.Brand href=\"/\">\r\n              <BsWatch/>\r\n              <strong style={{ fontFamily: \"unset\", fontSize: \"medium\" }}>\r\n                WatchMaker\r\n              </strong>\r\n            </Navbar.Brand>\r\n          </section>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <ul className=\"navbar-nav\">\r\n              <Nav className=\"ml-auto\" variant=\"pills\">\r\n                <NavLink\r\n                  exact\r\n                  activeClassName=\"nav-link active\"\r\n                  className=\"nav-link\"\r\n                  to=\"/transcations\"\r\n                  style={{ color: \"white\" }}\r\n                >\r\n                  View Transcations\r\n                </NavLink>\r\n                \r\n              </Nav>\r\n            </ul>\r\n            <ul className=\"navbar-nav mr-auto\"/>\r\n            \r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n        \r\n\r\n      </section>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarHeader;\r\n","//@Author - RajKumar B00849566\r\n//@Author - Smit Panchal B00828070\r\n\r\nimport React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Form, Button, InputGroup, Col, Row } from \"react-bootstrap\";\r\nimport \"./events.css\";\r\n\r\nclass CreateEvent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n \r\n\r\n  renderDescription = () => {\r\n    //console.log(this.props.isCreate);\r\n    return this.props.isCreate ? (\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"txtarea\">\r\n          <Form.Label>\r\n            Description:{\" \"}\r\n            <span className=\"fstyle\">\r\n              {100 - this.props.about.length} words remaining\r\n            </span>\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            placeholder=\"Max 100 words..\"\r\n            name=\"about\"\r\n            maxLength=\"100\"\r\n            value={this.props.about}\r\n            onChange={this.props.onDescriptionEnter}\r\n          />\r\n        </Form.Group>\r\n      </Form.Row>\r\n    ) : null;\r\n  };\r\n\r\n  //view for rendering upload image section\r\n  renderUploadImg = () => {\r\n    return this.props.isCreate ? (\r\n      <Form.Row>\r\n        <Form.Group as={Col} controlId=\"uploadimg\">\r\n          <Form.Label>\r\n            Upload Image:{\" \"}\r\n          </Form.Label>\r\n          <Row>\r\n          <Col>\r\n          <input type=\"file\"\r\n            multiple\r\n            className=\"form-control-file\"\r\n            id=\"imgupload\"\r\n            onChange={this.props.handleImgFiles}\r\n            accept=\"image/*\"\r\n            />\r\n            </Col>\r\n          <Col>\r\n            {this.renderClearImgBtn(this.props.imagePreviewUrl1)}\r\n            </Col>\r\n            </Row>\r\n\r\n\r\n          {this.props.imageError}\r\n          <br/>\r\n          <Row>\r\n            <Col>\r\n              {this.renderImgPreview(this.props.imagePreviewUrl1)}\r\n\r\n            </Col>\r\n          </Row>\r\n          </Form.Group>\r\n\r\n      </Form.Row>\r\n    ) : null;\r\n  };\r\n\r\n  //view for image preview section\r\n  renderImgPreview = (img) => {\r\n    return (img != '' && img != null) ? <img className=\"uploadimg\" src={img} width=\"200\" height=\"200\" border=\"1\"/> : null;\r\n  }\r\n\r\n  renderClearImgBtn = (img) => {\r\n    return (img != '' && img != null) ? <button onClick={this.props.onClearImgBtnClick}>clear</button> : null;\r\n  }\r\n\r\n\r\n  render() {\r\n    const myStyle = {\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      // backgroundColor: \"#c3c6d8\",\r\n      backgroundColor: \"#ffffff\",\r\n      borderRadius: \"7px\",\r\n      borderLeft: \"0.6rem solid #2B85FD\",\r\n      boxShadow:\r\n        \"0 4.8px 4.2px rgba(0, 0, 0, 0.034), 0 8.7px 7.3px rgba(0, 0, 0, 0.048), 0 14.5px 12px rgba(0, 0, 0, 0.06), 0 24.3px 19.9px rgba(0, 0, 0, 0.072), 0 43.8px 35.4px rgba(0, 0, 0, 0.086), 0 102px 82px rgba(0, 0, 0, 0.12)\",\r\n    };\r\n\r\n    let buttonText = this.props.isCreate\r\n      ? this.props.isUpdate\r\n        ? \"Update\"\r\n        : \"Create\"\r\n      : \"Find Event\";\r\n    let hedingText = this.props.isCreate ? \"Watch Details\" : \"Find a Ride\";\r\n\r\n    return (\r\n      <div>\r\n        <br />\r\n        <div style={myStyle}>\r\n          <div>\r\n            <Col>\r\n              <h3>{hedingText}</h3>\r\n            </Col>\r\n          </div>\r\n\r\n          <Col>\r\n            <Form\r\n              noValidate\r\n              validated={this.props.isValidated}\r\n              onSubmit={this.props.mySubmitHandler}\r\n            >\r\n              <Form.Row>\r\n                <Form.Group as={Col} controlId=\"eventId\">\r\n                  <Form.Label>Watch Name:</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    value={this.props.watchname}\r\n                    name=\"watchname\"\r\n                    maxLength=\"20\"\r\n                    onChange={this.props.onFromToEnter}\r\n                    required\r\n                  />\r\n                  <Form.Control.Feedback type=\"invalid\">\r\n                    Please provide a valid type.\r\n                  </Form.Control.Feedback>\r\n                </Form.Group>\r\n              </Form.Row>\r\n\r\n             \r\n\r\n              <Form.Row>\r\n              <Row>\r\n          <Form.Group as={Col}>\r\n            <Form.Label> Quantity:\r\n            </Form.Label>\r\n            <div className=\"def-number-input number-input\">\r\n              <Form.Control\r\n                value={this.props.quantity}\r\n                name=\"quantity\"\r\n                onChange={this.props.onNumInputChange}\r\n                type=\"number\"\r\n                maxLength=\"2\"\r\n                placeholder=\"0\"\r\n              />\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Group as={Col} controlId=\"toAddr\">\r\n            <Form.Label>\r\n              Price: \r\n            </Form.Label>\r\n            <InputGroup>\r\n              <InputGroup.Prepend>\r\n                <InputGroup.Text id=\"inputGroupPrepend\">CAD $</InputGroup.Text>\r\n              </InputGroup.Prepend>\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"0\"\r\n                name=\"price\"\r\n                maxLength=\"5\"\r\n                onChange={this.props.onNumInputChange}\r\n                aria-describedby=\"inputGroupPrepend\"\r\n                value={this.props.price}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>{\" \"}\r\n        </Row>\r\n              </Form.Row>\r\n              {this.renderDescription()}\r\n              {this.renderUploadImg()}\r\n              <div style={{ paddingBottom: \"10px\" }}>\r\n                <Row>\r\n                  <Col>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                      {buttonText}\r\n                    </Button>\r\n                  </Col>\r\n                  \r\n\r\n                </Row>\r\n              </div>\r\n            </Form>\r\n          </Col>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateEvent;\r\n","//@Author - RajKumar B00849566\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Form, Button, InputGroup, Col, Row } from \"react-bootstrap\";\r\n\r\nclass SortAndSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    const myStyle = {\r\n      // width: \"100%\",\r\n      // height: \"100%\",\r\n      // backgroundColor: \"#c3c6d8\",\r\n      backgroundColor: \"#ffffff\",\r\n      borderRadius: \"7px\",\r\n      borderLeft: \"0.6rem solid #5cb85c\",\r\n      boxShadow:\r\n        \"0 4.8px 4.2px rgba(0, 0, 0, 0.034), 0 8.7px 7.3px rgba(0, 0, 0, 0.048), 0 14.5px 12px rgba(0, 0, 0, 0.06), 0 24.3px 19.9px rgba(0, 0, 0, 0.072), 0 43.8px 35.4px rgba(0, 0, 0, 0.086), 0 102px 82px rgba(0, 0, 0, 0.12)\",\r\n    };\r\n    const header = this.props.isCreate ? \"Repository\" : \"Search Results\";\r\n    return (\r\n      <div style={myStyle}>\r\n        <Col>\r\n          <Row>\r\n            <Col>\r\n              <h3>{header}</h3>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group controlId=\"eventId\">\r\n                <Form.Label>Search by:</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={this.props.searchBy}\r\n                  name=\"searchBy\"\r\n                  onChange={this.props.onSearchByChange}\r\n                >\r\n                  <option value=\"watch_name\">Name</option>\r\n                  <option value=\"watch_quantity\">Quantity</option>\r\n                  <option value=\"watch_price\">Price</option>\r\n                  <option value=\"about\">About</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"search\">\r\n                <Form.Label>Search:</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search..\"\r\n                  value={this.props.searchTerm}\r\n                  name=\"searchTerm\"\r\n                  onChange={this.props.onSearchTermChange}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"searchById\">\r\n                <Form.Label>Sort by:</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={this.props.sortyBy}\r\n                  name=\"sorthBy\"\r\n                  onChange={this.props.onSortByChange}\r\n                >\r\n\r\n                  <option value=\"watch_name\">Name</option>\r\n                  <option value=\"watch_quantity\">Quantity</option>\r\n                  <option value=\"watch_price\">Price</option>\r\n                  <option value=\"about\">About</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortAndSearch;\r\n","//@Author - RajKumar B00849566\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Col, Row,Card,Button } from \"react-bootstrap\";\r\nimport \"./events.css\";\r\n\r\nclass PostEventHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  imageurl = () => {\r\n    let url = this.props.eventHistory.img_url + \"/100px180\";\r\n    return (url);\r\n  }\r\n\r\n  render() {\r\n     \r\n\r\n    return (\r\n      <div>\r\n     \r\n      <Card style={{ width: '18rem' }}>\r\n      <Card.Img variant=\"top\" src={this.imageurl()} alt=\"No Image\" width=\"100\" height=\"200\"/>\r\n      <Card.Body>\r\n        <Card.Title>{this.props.eventHistory.watch_name}</Card.Title>\r\n        <Card.Text>\r\n        \r\n        <p>Watch quantity <strong>{this.props.eventHistory.watch_quantity}</strong></p>\r\n        <p>Watch Price <strong> $ {this.props.eventHistory.watch_price}</strong></p>\r\n        <p>about <strong>{this.props.eventHistory.about}</strong></p>\r\n\r\n        \r\n        </Card.Text>\r\n            <Row>\r\n              <Col>\r\n        <Button onClick={() =>\r\n                    this.props.onPostedEvetClicked(this.props.eventHistory)\r\n                  } variant=\"primary\">View</Button>\r\n             </Col><Col>\r\n            \r\n          <Button onClick={() =>\r\n                    this.props.onDeleteEvetClicked(this.props.eventHistory)\r\n                  } variant=\"danger\">Delete</Button>\r\n          </Col>\r\n            </Row>\r\n      </Card.Body>\r\n        </Card>\r\n        <br/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PostEventHistory;\r\n","//@Author - RajKumar B00849566\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Loader extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div> <br />\r\n            <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n            \r\n         );\r\n    }\r\n}\r\n \r\nexport default Loader;","//@Author - RajKumar B00849566\r\n\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDvfu7jfKwSqh5P-nm6Uu4ucKG9L1I7V0k\",\r\n    authDomain: \"watchmaker-fb165.firebaseapp.com\",\r\n    databaseURL: \"https://watchmaker-fb165.firebaseio.com\",\r\n    projectId: \"watchmaker-fb165\",\r\n    storageBucket: \"watchmaker-fb165.appspot.com\",\r\n    messagingSenderId: \"526525473724\",\r\n    appId: \"1:526525473724:web:c35ea633c6f3539b55c1b9\",\r\n    measurementId: \"G-0YW371WZQ3\"\r\n};\r\n  \r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage, firebase as default };","//@Author - RajKumar B00849566\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Col, Container, Row,CardColumns } from \"react-bootstrap\";\r\nimport CreateEvent from \"./createevent\";\r\nimport SortAndSearch from \"./sortAndSearch\";\r\nimport PostEventHistory from \"./posteventhist\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport Cookies from \"js-cookie\";\r\nimport \"./events.css\";\r\nimport Loader from './loader'\r\nimport { storage } from '../firebase';\r\n\r\nclass CreateEventContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    \r\n    this.state = {\r\n      isMasked: false,\r\n      loader: false,\r\n      watchname: \"\",\r\n      \r\n      quantity: 0,\r\n      price: 0,\r\n      \r\n      about: \"\",\r\n      eventId: 0,\r\n      isUpdate: false,\r\n      updateItemId: 0,\r\n      searchTerm: \"\",\r\n      searchBy: \"watch_name\",\r\n      isValidated: false,\r\n      sortyBy: \"id\",\r\n      imageError: '',\r\n      imagePreviewUrl1: '',\r\n      files: [],\r\n      imageurls:[],\r\n      eventHistoryToDisplay: [],\r\n      eventHistory: [],\r\n    };\r\n  }\r\n\r\n  //Get all the evnts for a user\r\n  async componentDidMount() {\r\n    this.setState({ loader: true });\r\n    //API call to fetch data\r\n\r\n    await axios.get(`https://se2gktifxk.execute-api.us-east-1.amazonaws.com/dev/getallwatchinfo`)\r\n    .then(res => {\r\n\r\n      const data = res.data;\r\n      console.log(data);\r\n      this.state.eventHistory.push(data);\r\n      this.setState({loader: false,eventHistory:this.state.eventHistory[0],eventHistoryToDisplay:this.state.eventHistory[0]})\r\n    }).catch(err =>  {\r\n        console.log(err);\r\n        //this.setState({ data:\"error\" });\r\n    })\r\n  };\r\n\r\n  /*Create/Update button click handler\r\n  Image uploades to Db here*/\r\n  mySubmitHandler = async (event) => {\r\n\r\n    event.preventDefault();\r\n    const form = event.currentTarget;\r\n    //Form validation\r\n    if (form.checkValidity() === false) {\r\n      this.setState({ isValidated: true });\r\n      event.stopPropagation();\r\n    } else {\r\n      this.setState({ isMasked: true });\r\n      //Upload image\r\n      this.uploadImages()\r\n        .then(async (imageurls) => {\r\n          console.log(this.state.updateItemId);\r\n          if (this.state.isUpdate) {\r\n\r\n            let updatedItem = {\r\n              id: this.state.updateItemId,\r\n              name: this.state.watchname,\r\n              quantity: this.state.quantity,\r\n              price: this.state.price,\r\n              about: this.state.about,\r\n              url: imageurls[0],\r\n              isWatchmaker:true\r\n            };\r\n\r\n            //API call for put\r\n            //https://eventgoapi.herokuapp.com/createevent/updateEvent/\r\n            //http://localhost:8080/createevent/updateEvent/\r\n            await axios.put(`https://se2gktifxk.execute-api.us-east-1.amazonaws.com/dev/getallwatchinfo`,updatedItem )\r\n              .then(res => {\r\n                const { eventHistory } = this.state;\r\n                console.log(eventHistory)\r\n                if (res.data) {\r\n                  eventHistory.map((item) => {\r\n                    if (item.watch_id === this.state.updateItemId) {\r\n                      item.watch_name = this.state.watchname;\r\n                      item.watch_quantity = this.state.quantity;\r\n                      item.watch_price = this.state.price;\r\n                      item.about = this.state.about;\r\n                      item.img_url = imageurls[0]\r\n                    }\r\n                  });\r\n                }\r\n\r\n                this.setState({\r\n                  eventHistory: eventHistory,\r\n                  eventHistoryToDisplay: eventHistory,\r\n                  watchname: \"\",\r\n                  price: 0,\r\n                  quantity: 0,\r\n                  about: \"\",\r\n                  isUpdate: false,\r\n                  isValidated: false,\r\n                  imagePreviewUrl1: \"\",\r\n                  files: [],\r\n                  imageurls:[]\r\n                });\r\n                document.getElementById(\"imgupload\").value = null;\r\n\r\n              }).catch(err => {\r\n                console.log(err);\r\n                //this.setState({ data:\"error\" });\r\n              })\r\n\r\n              this.setState({ isMasked: false });\r\n          } else {\r\n            let newItem = {\r\n              name: this.state.watchname,\r\n              quantity: this.state.quantity,\r\n              price: this.state.price,\r\n              about: this.state.about,\r\n              url: imageurls[0],\r\n            };\r\n            //console.log(newItem)\r\n            //API call for push\r\n            //https://eventgoapi.herokuapp.com/createevent/postEvent/\r\n            //http://localhost:8080/createevent/postEvent/\r\n            await axios.post(`https://se2gktifxk.execute-api.us-east-1.amazonaws.com/dev/getallwatchinfo`,  newItem )\r\n              .then(res => {\r\n\r\n                const data = res.data;\r\n                console.log(data);\r\n                this.setState({\r\n                  eventHistory: data,\r\n                  eventHistoryToDisplay: data,\r\n                  watchname: \"\",\r\n                  price: 0,\r\n                  quantity: 0,\r\n                  about: \"\",\r\n                  isUpdate: false,\r\n                  isValidated: false,\r\n                  imagePreviewUrl1: \"\",\r\n                  files: [],\r\n                  imageurls:[]\r\n                });\r\n                document.getElementById(\"imgupload\").value = null;\r\n                this.setState({ isMasked: false });\r\n              }).catch(err => {\r\n                console.log(err);\r\n              })\r\n          }\r\n      });\r\n    }\r\n  };\r\n\r\n  //triggers when text entered to From and To fields\r\n  onFromToEnter = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //triggers when text entered to numeric fields\r\n  onNumInputChange = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    if (value >= 0 && value.length <= 5) {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  //triggers when text entered to Description field\r\n  onDescriptionEnter = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    if (value.length <= 100) {\r\n      this.setState({ [name]: value });\r\n    }\r\n  };\r\n\r\n  //triggers when text entered to From and To fields\r\n  onEventddChange = (event) => {\r\n    this.setState({ eventTypeVal: event.target.value });\r\n  };\r\n\r\n  //Click on posted events, updating feature.\r\n  onPostedEvetClicked = (history) => {\r\n    //console.log(history)\r\n    const {\r\n      watch_id,\r\n      watch_name,\r\n      watch_quantity,\r\n      watch_price,\r\n      about,\r\n      img_url,\r\n\r\n    } = history;\r\n\r\n    this.setState({\r\n      updateItemId: watch_id,\r\n      watchname: watch_name,\r\n      quantity: watch_quantity,\r\n      price: watch_price,\r\n      about: about == null? \"\":about,\r\n      isUpdate: true,\r\n      imagePreviewUrl1: img_url,\r\n    });\r\n  };\r\n\r\n  //Delete posted events\r\n  onDeleteEvetClicked = async (history) => {\r\n    let { eventHistory } = this.state;\r\n    //put to API\r\n    let id = { id: history.watch_id };\r\n    console.log(id)\r\n    await axios.delete(`https://se2gktifxk.execute-api.us-east-1.amazonaws.com/dev/getallwatchinfo`, { data:  id })\r\n      .then(res => {\r\n        if (res.data) {\r\n          let filteredevents = eventHistory.filter((item) => item.watch_id != history.watch_id);\r\n          this.setState({\r\n            eventHistory: filteredevents,\r\n            eventHistoryToDisplay: filteredevents,\r\n          });\r\n        }\r\n      }).catch(err => {\r\n        console.log(err);\r\n        //this.setState({ data:\"error\" });\r\n      })\r\n  };\r\n\r\n  //Render view for posted events\r\n  renderPostEventHistory = () => {\r\n    return this.state.eventHistoryToDisplay.length > 0 ? (\r\n      this.state.eventHistoryToDisplay.map((item) => (\r\n        \r\n        <PostEventHistory\r\n          key={item.watch_id}\r\n          eventHistory={item}\r\n          onPostedEvetClicked={this.onPostedEvetClicked}\r\n          onDeleteEvetClicked={this.onDeleteEvetClicked}\r\n        />\r\n      ))\r\n    ) : (\r\n      <div>No items to display</div>\r\n    );\r\n  };\r\n\r\n  /*Search and Sort Feature --start*/\r\n  onSearchTermChange = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    console.log(name,value)\r\n    this.setState({ [name]: value });\r\n    const searchBy = this.state.searchBy;\r\n    let filteredEventHistory = \"\";\r\n    if (value.length > 0) {\r\n      filteredEventHistory = this.state.eventHistory.filter(\r\n        (item) =>\r\n          item[searchBy]\r\n            .toString()\r\n            .toLowerCase()\r\n            .indexOf(value.toString().toLowerCase()) != -1\r\n      );\r\n    } else {\r\n      filteredEventHistory = this.state.eventHistory;\r\n    }\r\n    this.setState({ eventHistoryToDisplay: filteredEventHistory });\r\n  };\r\n\r\n  //searchby dropdown change event\r\n  onSearchByChange = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  //sort dropdown change event\r\n  onSortByChange = (event) => {\r\n    let name = event.target.name;\r\n    let value = event.target.value;\r\n    this.setState({ [name]: value });\r\n    let { eventHistoryToDisplay } = this.state;\r\n    eventHistoryToDisplay.sort((a, b) => (a[value] > b[value] ? 1 : -1));\r\n    this.setState({ eventHistoryToDisplay: eventHistoryToDisplay });\r\n  };\r\n  /*Search and Sort Feature --end*/\r\n\r\n  /* Upload Image Feature --start */\r\n  //Function to upload images to Firebase\r\n  uploadImages = () => {\r\n    //event.preventDefault();\r\n    let urls = [];\r\n    let counter = -1;\r\n    this.setState({ imageurls: [] })\r\n    let { files } = this.state;\r\n    return new Promise((resolve, reject) => {\r\n      if (files.length > 0) {\r\n        files.forEach((file, index) => {\r\n\r\n          //Upload images to Firebase\r\n          storage.ref(`images/${file.name}`).put(file).on(\r\n            \"state_changed\",\r\n            snapshot => { },\r\n            error => {\r\n              console.log(error)\r\n            },\r\n            () => {\r\n              storage\r\n                .ref(\"images\")\r\n                .child(file.name)\r\n                .getDownloadURL().then(url => {\r\n                  //console.log(url)\r\n                  //get the image URL\r\n                  urls.push(url)\r\n                  counter = counter + 1;\r\n                  if (counter == files.length - 1) {\r\n                    resolve(urls)\r\n                  }\r\n                })\r\n            }\r\n          )\r\n        });\r\n\r\n      }\r\n      else {\r\n        if (this.state.isUpdate) {\r\n          if (this.state.imagePreviewUrl1 != null) {\r\n            urls.push(this.state.imagePreviewUrl1)\r\n          }\r\n          resolve(urls);\r\n        }\r\n        resolve(urls);\r\n      }\r\n    })\r\n  };\r\n\r\n  handleImgFiles = e => {\r\n    if (e.target.files.length > 1) {\r\n      e.preventDefault();\r\n      this.setState({ imageError: 'Only two images allowed...' })\r\n    } else {\r\n      let reader1 = new FileReader();\r\n      let file1 = e.target.files[0];\r\n      this.state.files.push(file1);\r\n      reader1.onloadend = () => {\r\n        this.setState({\r\n          imagePreviewUrl1: reader1.result,imageError:''\r\n        });\r\n      }\r\n      reader1.readAsDataURL(file1)\r\n    }\r\n  };\r\n\r\n  onClearImgBtnClick = e => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      imageError: '',\r\n      imagePreviewUrl1: '',\r\n      files: [],\r\n      imageurls: []\r\n    });\r\n    document.getElementById(\"imgupload\").value = null;\r\n  }\r\n  /* Upload Image Feature --end */\r\n\r\n  renderMask = () => {\r\n    return (\r\n      this.state.isMasked ?\r\n        <div className=\"screenmask\" >\r\n          <Row className=\"justify-content-center align-items-center\">\r\n            <div style={{ paddingTop: \"134px\" }}><Loader /></div>\r\n          </Row>\r\n        </div> : null\r\n    );\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div className=\"pb-5\">\r\n\r\n        {this.renderMask()}\r\n\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <CreateEvent\r\n                mySubmitHandler={this.mySubmitHandler}\r\n                onFromToEnter={this.onFromToEnter}\r\n                onDescriptionEnter={this.onDescriptionEnter}\r\n                onNumInputChange={this.onNumInputChange}\r\n                handleImgFiles={this.handleImgFiles}\r\n                watchname={this.state.watchname}\r\n                quantity={this.state.quantity}\r\n                price={this.state.price}\r\n                about={this.state.about}\r\n                isValidated={this.state.isValidated}\r\n                imagePreviewUrl1={this.state.imagePreviewUrl1}\r\n                isCreate={true}\r\n                isUpdate={this.state.isUpdate}\r\n              />\r\n            </Col>\r\n            <Col>\r\n              <br />\r\n              <Row>\r\n                <SortAndSearch\r\n                  onSearchTermChange={this.onSearchTermChange}\r\n                  onSearchByChange={this.onSearchByChange}\r\n                  onSortByChange={this.onSortByChange}\r\n                  searchTerm={this.state.searchTerm}\r\n                  searchBy={this.state.searchBy}\r\n                  sorthBy={this.state.sorthBy}\r\n                  isCreate={true}\r\n                />\r\n              </Row>\r\n              <br/>\r\n              <Row className=\"justify-content-center align-items-center\">\r\n                \r\n                {this.state.loader ? <Loader /> : <CardColumns className=\"card-columns-2\">{this.renderPostEventHistory()}</CardColumns>}\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateEventContainer;\r\n","//@Author - RajKumar B00849566\r\n\r\nimport React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport \"./events.css\";\r\nimport MaterialTable from 'material-table';\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n\r\nclass FindEventContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transcations: [],\r\n      columns: [\r\n        { title: 'Watch Id', field: 'watch_id',type: 'numeric'  },\r\n        { title: 'Quantity Ordered', field: 'qty_ordered', type: 'numeric' },\r\n        { title: 'Ordered By', field: 'ordered_by' },\r\n        {\r\n          title: 'Orderd Date',\r\n          field: 'order_date'\r\n        },\r\n      ]\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.setState({ loader: true });\r\n    //API call to fetch data\r\n\r\n    await axios.get(`https://se2gktifxk.execute-api.us-east-1.amazonaws.com/dev/watchorders `)\r\n    .then(res => {\r\n\r\n      const data = res.data;\r\n      console.log(data);\r\n      this.state.transcations.push(data);\r\n      this.setState({ loader: false, transcations: data });\r\n    }).catch(err =>  {\r\n        console.log(err);\r\n        //this.setState({ data:\"error\" });\r\n    })\r\n  }\r\n\r\n  render() {\r\n    \r\n    \r\n    return (\r\n      \r\n      <div>\r\n        <Container>\r\n        <MaterialTable\r\n      title=\"Transcations\"\r\n      columns={this.state.columns}\r\n      data={this.state.transcations}\r\n      \r\n          />\r\n          </Container>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FindEventContainer;\r\n","//@Author - RajKumar B00849566\r\n\r\nimport React from 'react';\r\nimport { Row,Col,Container } from \"react-bootstrap\";\r\n \r\nfunction ErrorPage() {\r\n  const greeting = 'Hello Function Component!';\r\n \r\n    return (\r\n        <div style={{paddingTop:\"10%\"}}>\r\n            <Container>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <h1 style={{color:\"#013b75\"}}>404</h1>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                <span style={{color:\"#013b75\"}}>The page you are looking for doesn't exist on the server</span>\r\n                </Row>\r\n                <Row className=\"justify-content-center align-items-center\">\r\n                    <span style={{color:\"#013b75\"}}>Please select items from the navbar</span>\r\n                </Row>\r\n                </Container>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n \r\nexport default ErrorPage;","//@Author - RajKumar B00849566\r\n/* @Author - Jigar Makwana B00842568 */\r\nimport React, { Component } from \"react\";\r\nimport NavbarHeader from \"./navbarHeader\";\r\nimport createeventContainer from \"./createeventContainer\";\r\nimport FindEventContainer from \"./findeventContainer\";\r\n\r\nimport Error from \"./errorpage\";\r\nimport \"./events.css\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nclass NavbarTemplate extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div>\r\n <div>\r\n          <NavbarHeader />\r\n        </div>\r\n        <div className=\"content\" style={{ overflow: \"auto\", height: \"100%\" }}>\r\n          <Switch>\r\n           \r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              component={createeventContainer}\r\n            ></Route>\r\n            <Route\r\n              exact\r\n              path=\"/transcations\"\r\n              component={FindEventContainer}\r\n            ></Route>\r\n            <Route exact path=\"/*\" component={Error} />\r\n          </Switch>\r\n        </div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarTemplate;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n//import App from './App';\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport NavbarTemplate from \"./Raj/components/navbarTemplate\";\r\n\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n<Switch>\r\n\r\n\r\n    \r\n    <Route component={NavbarTemplate} />\r\n</Switch>\r\n</BrowserRouter>,\r\ndocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}